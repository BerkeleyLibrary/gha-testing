name: Build / Test / Push

on:
  push:
  workflow_call:
  workflow_dispatch:

env:
  COMPOSE_FILE: docker-compose.yml:docker-compose.ci.yml
  DOCKER_METADATA_SET_OUTPUT_ENV: 'true'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Produce image tag 'sha-*-pre'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: type=sha,suffix=-pre

      - name: Build and push the untested image
        id: build
        uses: docker/build-push-action@v6
        with:
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          provenance: true
          cache-from: type=gha
          cache-to: type=gha

  test:
    runs-on: ubuntu-latest
    needs:
      - build
    env:
      DOCKER_APP_IMAGE: ${{ needs.build.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run the tests
        run: bin/test

            # type=ref,event=branch
            # type=ref,event=tag
            # type=semver,pattern={{major}}
            # type=semver,pattern={{major}}.{{minor}}
            # type=semver,pattern={{version}}
            # type=raw,value=latest,enable={{is_default_branch}}